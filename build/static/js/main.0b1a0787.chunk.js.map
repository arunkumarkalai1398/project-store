{"version":3,"sources":["Auth/signup.js","adddelete/AuthActions.js","Auth/signin.js","Dashboard/ProjectSummary.js","Dashboard/Projectlist.js","Dashboard/Notification.js","Dashboard.js","SignedIn.js","Signedout.js","Navbar.js","ProjectDetails.js","fbCongig/CreateProject.js","adddelete/ProjectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/Projreducer.js","store/reducer/rootreducer.js","config/FbConfig.js","index.js"],"names":["signup","state","email","password","Firstname","Lastname","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","console","log","props","signUp","this","auth","uid","to","className","onSubmit","htmlFor","type","onChange","Component","connect","authError","firebase","dispatch","creds","Users","getState","getFirebase","getFirestore","firestore","d","createUserWithEmailAndPassword","then","res","collection","doc","user","set","firstname","initials","catch","err","signin","signIn","credentials","signInWithEmailAndPassword","ProjectSummary","projects","Title","AuthorFirstName","moment","createdAt","toDate","calendar","Projectlist","project","map","key","Notification","notifications","item","content","time","fromNow","compose","ordered","firestoreConnect","limit","orderBy","signOut","onClick","href","profile","Signedout","link","match","params","data","CreateProject","storeProject","history","push","add","Date","App","exact","path","component","Dashboard","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","Projreducer","rootreducer","combineReducers","projectreducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0b1a0787.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { auth } from 'firebase'\r\nimport {signUp} from '../adddelete/AuthActions'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n\r\n\r\n\r\n class signup extends Component {\r\nstate={\r\n    email:'',\r\n    password:'',\r\n    Firstname:'',\r\n    Lastname:''\r\n}\r\nhandleChange=(e)=>{\r\n    this.setState({\r\n     [e.target.id]:[e.target.value]\r\n    })}\r\n     handleSubmit=(e)=>{\r\ne.preventDefault();\r\nconsole.log(this.state);\r\nthis.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const {auth}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            \r\n            <section className=\"container \">\r\n                <form onSubmit={this.handleSubmit} className=\"white container signup\">\r\n                    <h4 className=\"grey-text text-darken-3 text-center m-2\">Sign-Up</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"Firstname\">Firstname</label>\r\n                        <input type=\"text\" id=\"Firstname\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"Lastname\">Lastname</label>\r\n                        <input type=\"text\" id=\"Lastname\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field center\">\r\n                <button className=\"btn blue lighten-1 z-depth-0\">Signup</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(signup);\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      console.log(credentials.email[0]);\r\n      firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email[0],\r\n        credentials.password[0 ]\r\n      ).then((res) => {\r\n\r\n        dispatch({ type:'LOGIN_SUCCESS',res });\r\n      }).catch((err) => {\r\n        dispatch({ type:'LOGIN_ERROR', err });\r\n      });\r\n  \r\n    }\r\n  }\r\n\r\n  export const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({type:'SIGNIN_SUCCESSS'});})\r\n    }\r\n  }\r\n   export const signUp =(Users)=>{\r\n    return (dispatch, getState, {getFirebase,getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n    let f=Users.Firstname[0][0];\r\n    let l=Users.Lastname[0][0];\r\n    let d=f+l;\r\n    console.log(d);\r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        Users.email[0],\r\n        Users.password[0]\r\n      ).then((res) => {\r\nreturn firestore.collection('user').doc(res.user.uid).set({\r\n  firstname:Users.Firstname[0],\r\n  Lastname:Users.Lastname[0],\r\n  initials:d\r\n}).then(()=>{\r\n        dispatch({ type:'SIGNUP_SUCCESS',res });\r\n      }).catch((err) => {\r\n        dispatch({ type:'SIGNUP_ERROR', err });\r\n      });\r\n  \r\n    }\r\n      )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../adddelete/AuthActions'\r\nimport { auth } from 'firebase'\r\nimport { Redirect } from 'react-router-dom'\r\nimport '.././App.css'\r\n class signin extends Component {\r\nstate={\r\n    email:\"\",\r\n    password:\"\"\r\n}\r\n handleChange=(e)=>{\r\n    this.setState({\r\n     [e.target.id]:[e.target.value]\r\n    })}\r\n     handleSubmit=(e)=>{\r\ne.preventDefault();\r\nthis.props.signIn(this.state);\r\n    }\r\n\r\n    render() {    \r\n        const {auth}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <section className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white container signup\">\r\n                    <h4 className=\"grey-text text-darken-3 text-center m-2\">Sign-in</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                <button className=\"btn blue lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n      authError: state.auth.authError,\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(signin)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n const ProjectSummary = ({projects}) => {\r\n  return (\r\n        <div className=\"row \">\r\n        <div className=\"col s12 m9\">\r\n          <div className=\"card white darken-1\">\r\n            <div className=\"card-content \">\r\n  <span className=\"card-title black-text h1\">{projects.Title}</span>\r\n  <p className=\"red-text\">{projects.AuthorFirstName}</p>\r\n            </div>\r\n            <div className=\"card-action\">\r\n  <p className=\"grey-text\">{moment(projects.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default ProjectSummary;","import React from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Projectlist({project}) {\r\n    return (\r\n<div>\r\n    {project && project.map(projects=>{\r\n        return(\r\n            <Link to={'./project/'+projects.id} key={projects.id}>\r\n         \r\n  <ProjectSummary projects={projects}    />\r\n  </Link>\r\n       )   })}\r\n    \r\n  \r\n    \r\n</div>\r\n    )\r\n}\r\n","import 'materialize-css/dist/css/materialize.min.css'\r\nimport React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\" z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <h4 className=\"white-text \">Notifications</h4>\r\n          <ul className=\"card\">\r\n            { notifications && notifications.map(item =>{\r\n              return(\r\n                <div className=\"card \">\r\n              <li key={item.id}>\r\n                <p className=\"pink-text card-title center\">{item.user} </p>\r\n                <i className=\"card-content italic\">{item.content}</i>\r\n                <div className=\"note-date grey-text card-action\">{moment(item.time.toDate()).fromNow()}</div>\r\n                \r\n              </li>\r\n              </div>  \r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport './App.css';\r\nimport Projectlist from \"./Dashboard/Projectlist\" \r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport Notification from \"./Dashboard/Notification\" \r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n const Dashboard = (props) => {\r\nconst {projects,auth,notifications}=props;\r\nif(!auth.uid) return <Redirect to=\"/signin\"/>\r\n    return (\r\n     <section className=\"\">\r\n        <div className=\"dashboard container\">\r\n           <article className=\"row\">\r\n<div className=\"col s12 m6\">\r\n<Projectlist project={projects}/>\r\n</div>\r\n<div className=\"col s12 m6\">\r\n<Notification notifications={notifications}/>\r\n</div>\r\n           </article>\r\n        </div>\r\n     </section>\r\n    )\r\n}\r\nconst mapinitialState=(state)=>{\r\n   return{\r\nprojects:state.firestore.ordered.project,\r\nauth:state.firebase.auth,\r\nnotifications: state.firestore.ordered.notifications\r\n   }\r\n}\r\nexport default \r\ncompose(connect(mapinitialState),\r\n firestoreConnect([{collection:'project'},\r\n { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}])\r\n)(Dashboard);","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from './adddelete/AuthActions'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n const SignedIn = (props) => {\r\n    return (\r\n        <div className=\"right\">\r\n            <ul>\r\n                <li><NavLink to='/create-form'>NewProject</NavLink></li>\r\n                <li><a onClick={props.signOut} href=\"#\">log out</a></li>\r\n    <li><NavLink to='/' className=\"btn btn-floating pink darken-3\">{props.profile.initials}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst SigninDispatch=(dispatch)=>{\r\n    return{\r\n        signOut:()=>{dispatch(signOut())}\r\n    }\r\n}\r\nexport default connect(null,SigninDispatch)(SignedIn);\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n const Signedout = () => {\r\n    return (\r\n        <div className=\"right\">\r\n            <ul>\r\n                <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n                <li><NavLink to='/signin'>log in</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Signedout;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport SignedIn from './SignedIn'\r\nimport Signedout from './Signedout'\r\nimport {connect} from 'react-redux'\r\n const Navbar = (props) => {\r\n     const {auth,profile}=props\r\n     const link =auth.uid ?  <SignedIn profile={profile}/>:<Signedout/>;\r\n    return (\r\n       <nav className=\"nav-wrapper blue darken-3\">\r\n           <div className=\"container\">\r\n               <Link to='/'className=\"brand-logo\">ProjectDetails</Link>\r\n           {link}\r\n           </div>\r\n       </nav>\r\n    )\r\n}\r\nlet navaInitialProps=(state)=>{\r\n    return{\r\nauth:state.firebase.auth,\r\nprofile:state.firebase.profile\r\n}\r\n}\r\nexport default connect(navaInitialProps)(Navbar);","import React from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport { connect} from 'react-redux'\r\n  import { compose } from 'redux'\r\n  import moment from 'moment'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n const ProjectDetails = (props) => {\r\n\r\nconst {projects}=props;\r\nconsole.log(projects);\r\nif(projects) {\r\n  return(\r\n  <div className=\"row container dashboard \">\r\n  <div className=\"col s12 m12\">\r\n    <div className=\"card white darken-1\">\r\n      <div className=\"card-content \">\r\n  <span className=\"card-title h1\">{projects.Title}</span>\r\n  <p>{projects.content}</p>\r\n      </div>\r\n      <div className=\"card-content\">\r\n  <p className=\"grey-text\">{projects.AuthorFirstName}</p>\r\n      </div>\r\n      <p className=\"card-action ml-3\">{moment(projects.createdAt.toDate()).calendar()}</p>\r\n    </div>\r\n  </div>\r\n  </div>)\r\n}else{\r\n    return (\r\n<div className=\"container center \">\r\n<p>Loading data....</p>\r\n</div>       \r\n    )\r\n    }\r\n}\r\nconst mapstate=(state,props) =>{\r\n const id =props.match.params.id;\r\n const project =state.firestore.data.project;\r\n \r\n const projects =project ?project[id]:null\r\n return{\r\nprojects:projects\r\n  }\r\n}\r\nexport default compose(connect(mapstate),\r\nfirestoreConnect([{\r\n   collection:'projects'\r\n}])\r\n)\r\n(ProjectDetails);","import React, { Component } from 'react'\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\nimport {storeProject} from '../adddelete/ProjectActions'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport '.././App.css'\r\n class CreateProject extends Component {\r\nstate={\r\n    Title:'',\r\n    content:'',\r\n}\r\n handleChange=(e)=>{\r\n    this.setState({\r\n     [e.target.id]:[e.target.value]\r\n    })}\r\n     handleSubmit=(e)=>{\r\ne.preventDefault();\r\nthis.props.storeProject(this.state);  \r\nthis.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n    const {auth}=this.props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\"/>\r\n        return (\r\n            <section className=\"container \">\r\n                <form onSubmit={this.handleSubmit} className=\"white container signup\">\r\n                    <h4 className=\"grey-text text-darken-3 text-center m-2\">Create-Project</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"Title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">content</label>\r\n                       <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                <button className=\"btn blue lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nlet mapDispatchProps=(state)=>{\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nlet mapdispatch = (dispatch) => {\r\nreturn{\r\n    storeProject: (project) => dispatch(storeProject(project))\r\n    \r\n}\r\n}\r\nexport default  connect(mapDispatchProps,mapdispatch)(CreateProject);\r\n ","\r\nexport const storeProject =(project)=>{\r\n   return (dispatch,getState,{ getFirestore,getFirebase})=>{\r\n       const firestore=getFirestore();\r\n       const authId =getState().firebase.auth.uid;\r\n       const profile =getState().firebase.profile.firstname+getState().firebase.profile.Lastname\r\n       console.log(project);\r\n       firestore.collection('project').add({\r\n           ...project,\r\n           AuthorFirstName:profile,\r\n           createdAt:new Date(),\r\n       }).then(()=>{\r\n        dispatch({type:'STORE-ROOM',project})\r\n       }) \r\n       .catch((err) => {\r\n        dispatch({type:'STORE-ERROR',err})})\r\n   }\r\n       \r\n   }\r\n ","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route,Switch} from 'react-router-dom';\nimport signup from './Auth/signup';\nimport signin from './Auth/signin';\nimport Dashboard from './Dashboard';\nimport Navbar from './Navbar';\nimport ProjectDetails from './ProjectDetails';\nimport CreateProject from './fbCongig/CreateProject';\nimport './App.css'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n         <Navbar/>\n         <Switch>\n      <Route exact path='/' component={Dashboard}/>\n      <Route   path='/project/:id' component={ProjectDetails}/>\n      <Route path='/signin' component={signin}/>\n      <Route path='/signup' component={signup}/>\n      <Route path='/create-form' component={CreateProject}/>\n    </Switch>\n         </BrowserRouter>   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n  }\r\n  const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n  \r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n  \r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n  export default authReducer;","let initState={\r\n}\r\nconst Projreducer =(state=initState,action) => {\r\n    switch(action.type){\r\n        case 'STORE-ROOM':\r\n            console.log(\"createproject\",action.project);\r\n            return state;\r\n            \r\n            case 'STORE-ERROR':\r\n                console.log('ERROR CODE');\r\n                return state;\r\n            default:\r\n                return state;\r\n    }\r\n\r\n\r\n}\r\nexport default Projreducer;"," import authReducer from './authReducer'\r\n import projectreducer from './Projreducer'\r\n import {combineReducers} from'redux'\r\n import {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n const rootreducer=combineReducers({\r\n     auth:authReducer,\r\n     project:projectreducer,\r\n     firestore:firestoreReducer ,\r\n     firebase:firebaseReducer\r\n }) \r\n export default rootreducer;","import firebase from 'firebase/app'\r\nimport  'firebase/auth'\r\nimport 'firebase/firestore';\r\nvar Config = {\r\n    apiKey: \"AIzaSyBf64Wb6UtaNF41Of02MK13JUVP3QxDW_k\",\r\n    authDomain: \"projectstore-a7e26.firebaseapp.com\",\r\n    databaseURL: \"https://projectstore-a7e26.firebaseio.com\",\r\n    projectId: \"projectstore-a7e26\",\r\n    storageBucket: \"projectstore-a7e26.appspot.com\",\r\n    messagingSenderId: \"1062512146086\",\r\n    appId: \"1:1062512146086:web:9679853692348d8fbce667\",\r\n    measurementId: \"G-TDS1NB2R6G\"\r\n  };\r\n  firebase.initializeApp(Config);\r\n  firebase.firestore()\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore,applyMiddleware, compose} from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducer/rootreducer'\nimport {Provider} from 'react-redux';\nimport thunk from'redux-thunk'\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase ,getFirebase} from 'react-redux-firebase'\nimport fbConfig  from './config/FbConfig'\nconst store=createStore(rootReducer,\n  compose(applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase}),\n  ), reduxFirestore(fbConfig),reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'user',attachAuthIsReady:true})));\n\n  store.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(\n      <Provider store={store}> \n        <App />\n      </Provider>,\n      document.getElementById('root'));\n      serviceWorker.unregister();\n  })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}